// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String
  bio       String?
  avatar    String?
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Post      Post[]
  Roomchat  Roomchat[]
  Groupchat Groupchat[]

  @@map("users")
}

model Post {
  id        Int      @id @default(autoincrement())
  body      String?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  media     String?
  privasi   Boolean
  last_chat DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Roomchat {
  id        Int      @id @default(autoincrement())
  chat      String?
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  image     String?
  pdf       String?
  word      String?
  archive   Boolean?
  last_chat DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roomchats")
}

model Groupchat {
  id        Int      @id @default(autoincrement())
  chat      String?
  title     String?
  bio       String?
  member    String?
  admin     Int
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  image     String?
  pdf       String?
  word      String?
  archive   Boolean?
  last_chat DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("groupchats")
}
